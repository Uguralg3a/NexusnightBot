plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.springframework.boot' version '2.1.0.RELEASE'

}

shadowJar {
    manifest {
        attributes(
                'Main-Class': 'de.ugur.bot.Bot'
        )
    }

}

group 'de.ugur'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url = uri("https://m2.duncte123.dev/snapshots")
    }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation("net.dv8tion:JDA:5.0.0-alpha.16")
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha16'
    implementation group: 'io.github.cdimascio', name: 'java-dotenv', version: '5.1.1'
    implementation platform('org.springframework.boot:spring-boot-dependencies:2.1.0.RELEASE')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.github.cliftonlabs:json-simple:3.1.0'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
  //  implementation("me.duncte123:botCommons:beta_3.0.3")
    //beta_3.0.3
//    implementation group: 'com.jagrosh', name: 'jda-utilities', version: '3.0.0'

}

test {
    useJUnitPlatform()
}



def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
    options.encoding = 'UTF-8'

}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}